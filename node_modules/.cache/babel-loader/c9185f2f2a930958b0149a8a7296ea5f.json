{"ast":null,"code":"import \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.object.to-string.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// 组件通信 props ---> 父传子  子传父\n// 父组件 在子组件标签中设定自定义事件/绑定属性\n// 子组件在props中收集 自定义事件名\n// 注意点 --->\n// props 是只读的  不建议修改\n// - 基本类型的数据  完全不能修改\n// - 复杂数据类型  可以修改  但不建议\n// $event \n// - 原生中代表事件对象\n// - \nimport MyProduct from \"./components/MyProduct.vue\";\nexport default {\n  components: {\n    MyProduct: MyProduct\n  },\n  data: function data() {\n    return {\n      list: [{\n        id: 1,\n        title: \"超级好吃的棒棒糖\",\n        price: 18.8,\n        desc: \"开业大酬宾, 全场8折\"\n      }, {\n        id: 2,\n        title: \"超级好吃的大鸡腿\",\n        price: 34.2,\n        desc: \"好吃不腻, 快来买啊\"\n      }, {\n        id: 3,\n        title: \"超级无敌的冰激凌\",\n        price: 14.2,\n        desc: \"炎热的夏天, 来个冰激凌了\"\n      }]\n    };\n  },\n  methods: {\n    subPrice: function subPrice(id) {\n      var target = this.list.find(function (item) {\n        return item.id == id;\n      });\n      target.price -= 1;\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;AAiBA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACAA;IAAAC;EAAA,CADA;EAEAC,IAFA,kBAEA;IACA;MACAC,OACA;QACAC,KADA;QAEAC,iBAFA;QAGAC,WAHA;QAIAC;MAJA,CADA,EAOA;QACAH,KADA;QAEAC,iBAFA;QAGAC,WAHA;QAIAC;MAJA,CAPA,EAaA;QACAH,KADA;QAEAC,iBAFA;QAGAC,WAHA;QAIAC;MAJA,CAbA;IADA;EAsBA,CAzBA;EA0BAC;IACAC,QADA,oBACAL,EADA,EACA;MACA;QAAA;MAAA;MACAM;IACA;EAJA;AA1BA","names":["components","MyProduct","data","list","id","title","price","desc","methods","subPrice","target"],"sourceRoot":"src","sources":["App.vue"],"sourcesContent":["<template>\n  <div>\n    <!-- 复用相同的组件 在子组件中内容不写死  根据父组件传递的内容进行差异化 -->\n    <!-- 关键点：父组件利用自定义事件  子组件利用props 进行不同数据传递 -->\n    <MyProduct\n      v-for=\"item in list\"\n      :key=\"item.id\"\n      :title=\"item.title\"\n      :price=\"item.price\"\n      :desc=\"item.desc\"\n      :item=\"item\"\n      @subPrice=\"subPrice\"\n    ></MyProduct>\n  </div>\n</template>\n\n<script>\n// 组件通信 props ---> 父传子  子传父\n// 父组件 在子组件标签中设定自定义事件/绑定属性\n// 子组件在props中收集 自定义事件名\n\n// 注意点 --->\n// props 是只读的  不建议修改\n// - 基本类型的数据  完全不能修改\n// - 复杂数据类型  可以修改  但不建议\n// $event \n// - 原生中代表事件对象\n// - \nimport MyProduct from \"./components/MyProduct.vue\";\nexport default {\n  components: { MyProduct },\n  data() {\n    return {\n      list: [\n        {\n          id: 1,\n          title: \"超级好吃的棒棒糖\",\n          price: 18.8,\n          desc: \"开业大酬宾, 全场8折\",\n        },\n        {\n          id: 2,\n          title: \"超级好吃的大鸡腿\",\n          price: 34.2,\n          desc: \"好吃不腻, 快来买啊\",\n        },\n        {\n          id: 3,\n          title: \"超级无敌的冰激凌\",\n          price: 14.2,\n          desc: \"炎热的夏天, 来个冰激凌了\",\n        },\n      ],\n    };\n  },\n  methods: {\n    subPrice(id) {\n      const target = this.list.find((item) => item.id == id);\n      target.price -= 1;\n    },\n  },\n};\n</script>\n\n<style>\n</style>\n\n"]},"metadata":{},"sourceType":"module"}