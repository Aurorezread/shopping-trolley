{"ast":null,"code":"import _regeneratorRuntime from \"/Users/dongfeilong/Desktop/vue\\u5B66\\u4E60/vue \\u7B2C\\u4E94\\u5929/\\u811A\\u624B\\u67B6/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/dongfeilong/Desktop/vue\\u5B66\\u4E60/vue \\u7B2C\\u4E94\\u5929/\\u811A\\u624B\\u67B6/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from \"axios\";\na;\nexport default {\n  name: \"App\",\n  data: function data() {\n    return {\n      books: [],\n      info: {\n        bookname: \"\",\n        author: \"\",\n        publisher: \"\"\n      }\n    };\n  },\n  // 请求图书，并渲染到页面上\n  // 1.发送请求：baseURl +url\n  // 2.服务端返回的数据，res.data\n  // 3.请求封装成函数，在created中调用更显语意话\n  // 单独请求  利用params设置好查询参数\n  // async/await\n  // - async 声明一个异步的函数\n  // - await 必须在async函数里面使用，作用上暂停代码执行，等待promise拿到结果\n  // - await 拿取的结果 所有后面不能用then\n  created: function created() {\n    this.getBooks();\n  },\n  methods: {\n    getBooks: function getBooks() {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var res;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return axios({\n                  url: \"http://123.57.109.30:3006/api/getbooks\" // params: {\n                  //   bookname: \"西游记\",\n                  // },\n\n                });\n\n              case 2:\n                res = _context.sent;\n                _this.books = res.data.data;\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    },\n    publishBook: function publishBook() {\n      var _this2 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var res;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return axios({\n                  url: \"http://123.57.109.30:3006/api/addbook\",\n                  method: \"POST\",\n                  data: _this2.info\n                });\n\n              case 2:\n                res = _context2.sent;\n                console.log(res);\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }))();\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA;AACAA;AACA;EACAC,WADA;EAEAC,IAFA,kBAEA;IACA;MACAC,SADA;MAEAC;QACAC,YADA;QAEAC,UAFA;QAGAC;MAHA;IAFA;EAQA,CAXA;EAYA;EAEA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACAC,OAvBA,qBAuBA;IACA;EACA,CAzBA;EA0BAC;IACAC,QADA,sBACA;MAAA;;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACAC;kBACAC,6CADA,CAEA;kBACA;kBACA;;gBAJA,EADA;;cAAA;gBACAC,GADA;gBAOA;;cAPA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAQA,CATA;IAUAC,WAVA,yBAUA;MAAA;;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACAH;kBACAC,4CADA;kBAEAG,cAFA;kBAGAb;gBAHA,EADA;;cAAA;gBACAW,GADA;gBAMAG;;cANA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAOA;EAjBA;AA1BA","names":["a","name","data","books","info","bookname","author","publisher","created","methods","getBooks","axios","url","res","publishBook","method","console"],"sourceRoot":"src","sources":["App.vue"],"sourcesContent":["<template>\n  <div ref=\"box\">\n    <input type=\"text\" placeholder=\"请输入书名\" v-model=\"info.bookname\" />\n    <input type=\"text\" placeholder=\"请输入出版社\" v-model=\"info.author\" />\n    <input type=\"text\" placeholder=\"请输入作者\" v-model=\"info.publisher\" />\n    <button @click=\"publishBook\">发布图书</button>\n    <br /><br />\n    <table border=\"2\" role=\"all\" width=\"30px\">\n      <tr>\n        <th>id</th>\n        <th>书名</th>\n        <th>作者</th>\n        <th>出版社</th>\n      </tr>\n      <tbody>\n        <tr v-for=\"item in books\" :key=\"item.id\">\n          <td>{{ item.id }}</td>\n          <td>{{ item.bookname }}</td>\n          <td>{{ item.author }}</td>\n          <td>{{ item.publisher }}</td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\na\nexport default {\n  name: \"App\",\n  data() {\n    return {\n      books: [],\n      info: {\n        bookname: \"\",\n        author: \"\",\n        publisher: \"\",\n      },\n    };\n  },\n  // 请求图书，并渲染到页面上\n\n  // 1.发送请求：baseURl +url\n  // 2.服务端返回的数据，res.data\n  // 3.请求封装成函数，在created中调用更显语意话\n\n  // 单独请求  利用params设置好查询参数\n  // async/await\n  // - async 声明一个异步的函数\n  // - await 必须在async函数里面使用，作用上暂停代码执行，等待promise拿到结果\n  // - await 拿取的结果 所有后面不能用then\n  created() {\n    this.getBooks();\n  },\n  methods: {\n    async getBooks() {\n      const res = await axios({\n        url: \"http://123.57.109.30:3006/api/getbooks\",\n        // params: {\n        //   bookname: \"西游记\",\n        // },\n      });\n      this.books = res.data.data;\n    },\n    async publishBook() {\n      const res = await axios({\n        url: \"http://123.57.109.30:3006/api/addbook\",\n        method: \"POST\",\n        data: this.info,\n      });\n      console.log(res);\n    },\n  },\n};\n</script>\n\n<style >\ntable {\n  width: 600px;\n  height: 600px;\n}\ninput {\n  border: 1px solid skyblue;\n  border-radius: 3px;\n  margin: 10px;\n  width: 160px;\n  height: 30px;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}